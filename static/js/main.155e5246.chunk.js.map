{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js"],"names":["useStyles","createUseStyles","section","padding","textAlign","title","marginBottom","Section","children","classes","className","defaultProps","list","display","justifyContent","item","marginRight","button","border","borderRadius","backgroundColor","fontWeight","textTransform","transition","cursor","color","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","btnName","type","onClick","Notification","message","value","Statistics","good","neutral","bad","total","positivePercentage","totalFeedback","positiveValue","App","state","event","label","target","textContent","setState","prevState","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155e5246.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  section: {\n    padding: '15px',\n    textAlign: 'center',\n  },\n  title: {\n    marginBottom: '15px',\n  },\n});\n\nconst Section = ({ title, children }) => {\n  const classes = useStyles();\n\n  return (\n    <section className={classes.section}>\n      <h1 className={classes.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: '15px',\n  },\n  item: {\n    '&:not(:last-child)': {\n      marginRight: '10px',\n    },\n  },\n  button: {\n    padding: '5px 10px',\n    border: '2px solid #d8d3d3',\n    borderRadius: '5px',\n\n    backgroundColor: 'white',\n\n    fontWeight: 500,\n    textTransform: 'capitalize',\n\n    transition: 'all 250ms linear',\n\n    cursor: 'pointer',\n\n    '&:hover, &:focus': {\n      backgroundColor: '#d8d3d3',\n      color: '#6b6b6b',\n      transition: 'all 250ms linear',\n    },\n  },\n});\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const classes = useStyles();\n\n  return (\n    <ul className={classes.list}>\n      {Object.keys(options).map(btnName => {\n        return (\n          <li className={classes.item} key={btnName}>\n            <button\n              className={classes.button}\n              type=\"button\"\n              onClick={onLeaveFeedback}\n            >\n              {btnName}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport Notification from '../Notification';\n\nconst useStyles = createUseStyles({\n  item: {\n    '&:not(:last-child)': {\n      marginBottom: '5px',\n    },\n  },\n  value: {\n    fontWeight: 500,\n  },\n});\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const classes = useStyles();\n  const totalFeedback = total();\n  const positiveValue = positivePercentage();\n\n  return (\n    <div>\n      {!!totalFeedback ? (\n        <ul>\n          <li className={classes.item}>\n            Good: <span className={classes.value}>{good}</span>\n          </li>\n          <li className={classes.item}>\n            Neutral: <span className={classes.value}>{neutral}</span>\n          </li>\n          <li className={classes.item}>\n            Bad: <span className={classes.value}>{bad}</span>\n          </li>\n          <li className={classes.item}>\n            Total: <span className={classes.value}>{totalFeedback}</span>\n          </li>\n          <li className={classes.item}>\n            Positive feedback:{' '}\n            <span className={classes.value}>{positiveValue}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const label = event.target.textContent;\n\n    this.setState(prevState => ({ [label]: (prevState[label] += 1) }));\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percent = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n\n    return percent;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statisctics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}